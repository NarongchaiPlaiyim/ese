<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        ">

    <util:properties id="config" location="classpath:config.properties"/>
    <util:properties id="message" location="classpath:message.properties"/>

    <context:annotation-config />
    <context:component-scan base-package="com.ese.beans"/>
    <context:component-scan base-package="com.ese.service"/>
    <context:component-scan base-package="com.ese.model.dao"/>
    <context:component-scan base-package="com.ese.transform"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{config['hibernate.driverClassName']}"/>
        <property name="url" value="#{config['url']}"/>
        <property name="username" value="#{config['username']}"/>
        <property name="password" value="#{config['password']}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.ese.model.db"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.default_schema">dbo</prop>
                <prop key="hibernate.default_catalog">ppwms03</prop>
                <prop key="current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--Logger-->
    <bean id="log" class="org.slf4j.LoggerFactory" factory-method="getLogger">
        <constructor-arg index="0" value="#{config['log.normal']}"/>
    </bean>
    <bean id="moLogger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
        <constructor-arg index="0" value="#{config['log.mo']}"/>
    </bean>
    <bean id="mtLogger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
        <constructor-arg index="0" value="#{config['log.mt']}"/>
    </bean>
    <!--Logger-->


    <security:http auto-config="false">
        <security:intercept-url pattern="/admin" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/site" access="ROLE_USER"/>
        <security:form-login login-page="/login.xhtml"/>
        <security:logout invalidate-session="true" delete-cookies="true" logout-success-url="/"/>
        <security:access-denied-handler error-page="/error/accessDenied.xhtml"/>
        <security:anonymous enabled="false"/>
        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <security:session-management session-authentication-strategy-ref="sas" invalid-session-url="/login.xhtml"/>
    </security:http>

    <security:authentication-manager/>

    <bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository"/>
        <property name="invalidSessionStrategy" ref="jsfRedirectStrategy"/>
    </bean>

    <bean id="jsfRedirectStrategy" class="com.ese.service.security.JSFRedirectionStrategy">
        <property name="invalidSessionUrl" value="/login.xhtml"/>
    </bean>

    <bean id="httpSessionSecurityContextRepository"
               class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>

    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry" />
        <property name="expiredUrl" value="/login.xhtml" />
    </bean>

    <bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1"/>
                    <property name="exceptionIfMaximumExceeded" value="false" />
                </bean>
                <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </bean>
                <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>

        </constructor-arg>
    </bean>
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans>


